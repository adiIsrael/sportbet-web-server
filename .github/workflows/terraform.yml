name: Terraform CI/CD with Plan Error Handling

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
      - '**.tfvars'

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.7.5

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Download Image Tag Artifact
      uses: actions/download-artifact@v4
      with:
        name: image-tag
        path: .

    - name: Read Image Tag from File
      run: |
        echo "DOCKER_IMAGE_TAG=$(cat image_tag.txt)" >> $GITHUB_ENV


    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_S3_BUCKET }}" \
          -backend-config="key=sportbet-web-server/terraform.state" \
          -backend-config="region=${{ secrets.AWS_REGION }}"

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -var="docker_image_tag=${{ env.DOCKER_IMAGE_TAG }}" -out=tfplan
        if terraform show -json tfplan | jq -e '.resource_changes[] | select(.change.actions | contains(["no-op"]) | not)'; then
          echo "has_changes=true" >> $GITHUB_ENV
        else
          echo "has_changes=false" >> $GITHUB_ENV
        fi

    - name: Echo has_changes Variable
      run: echo "has_changes is set to '${{ env.has_changes }}'"

    - name: Terraform Apply
      if: env.has_changes == 'true'
      run: terraform apply -var="docker_image_tag=${{ env.DOCKER_IMAGE_TAG }}" "tfplan"
